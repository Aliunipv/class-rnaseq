VISUALIZZARE
da questo workflow come si vedono i geni che risultano differenzialmente espressi in modo significativo, la loro pvalue e il log2foldchange? 
Stampare i primi geni pi√π significativi:

r
Copia
Modifica
head(resOrdered)
Filtrare i geni con padj < 0.05:

r
Copia
Modifica
sig_res <- subset(resOrdered, padj < 0.05)
head(sig_res)
Visualizzare i primi 10 geni con il log2FoldChange pi√π alto o basso:

r
Copia
Modifica
sig_res[order(sig_res$log2FoldChange, decreasing = TRUE), ][1:10, ]  # Pi√π espressi in case
sig_res[order(sig_res$log2FoldChange, decreasing = FALSE), ][1:10, ] # Meno espressi in case

VISUALIZZARE

Da questa analisi come si possono vedere le prime 10 categorie presenti nell'analisi di enrichment di questi risultati
Dall'analisi di enrichment eseguita nel workflow, i risultati sono stati salvati nelle variabili ego (Gene Ontology enrichment) e disgnet (associazione gene-malattia).

Puoi visualizzare le prime 10 categorie cos√¨:

1. Gene Ontology (GO) enrichment (ego)
r
Copia
Modifica
head(ego@result, 10)
Questo mostra le prime 10 categorie GO arricchite, ordinate per p-value.
Oppure puoi ordinarle per significativit√† e selezionare le migliori:

r
Copia
Modifica
ego@result[order(ego@result$p.adjust), ][1:10, ]
Seleziona le 10 categorie pi√π significative in termini di p.adjust.
2. Malattie associate ai geni differenzialmente espressi (disgnet)
r
Copia
Modifica
head(disgnet@result, 10)
Questo mostra le prime 10 malattie pi√π arricchite secondo DisGeNET.
Se vuoi ordinarle per significativit√†:

r
Copia
Modifica
disgnet@result[order(disgnet@result$p.adjust), ][1:10, ]

Grafici utili
Puoi visualizzare le categorie arricchite con un dotplot:

r
Copia
Modifica
dotplot(ego, showCategory=10)
Mostra le 10 categorie GO pi√π significative con asse X = GeneRatio (percentuale dei geni DE coinvolti).
Oppure un network plot per vedere la relazione tra geni e categorie:

r
Copia
Modifica
cnetplot(ego, foldChange=resdata$log2FoldChange[which(resdata$padj<0.5)])

L'oggetto ego@result contiene i dati dell'enrichment analysis per GO:

r
Copia
Modifica
ego@result[, c("Description", "Count")]
Description: Nome della categoria biologica (es. "cell division", "immune response").
Count: Numero di geni che appartengono a quella categoria.
Per vedere solo le prime 10 categorie:

r
Copia
Modifica
head(ego@result[, c("Description", "Count")], 10)

L'oggetto disgnet@result contiene i dati dell‚Äôarricchimento per malattie:

r
Copia
Modifica
disgnet@result[, c("Description", "Count")]
Description: Nome della malattia associata.
Count: Numero di geni differenzialmente espressi associati a quella malattia.
Per vedere le prime 10:

r
Copia
Modifica
head(disgnet@result[, c("Description", "Count")], 10)

Per rappresentare graficamente la rete di connessioni tra categorie e geni:

r
Copia
Modifica
cnetplot(ego, foldChange=resdata$log2FoldChange[which(resdata$padj<0.5)])
Mostra un grafo dove:
I nodi rappresentano le categorie GO arricchite e i geni DE associati.
Le connessioni indicano quali geni sono coinvolti in ciascuna categoria.
Se vuoi vedere solo le prime 10 categorie pi√π arricchite, usa:

r
Copia
Modifica
cnetplot(ego, foldChange=resdata$log2FoldChange[which(resdata$padj<0.5)], showCategory=10)

VISUALIZZARE
come posso vedere la Percentuale della varianza
spiegata dalle prime due
componenti principali?

plotPCA(ntd, intgroup=c("condition"))
Questa funzione √® utile per visualizzare la variabilit√† nei dati di espressione genica tra campioni, ma non mostra direttamente la percentuale di varianza spiegata.

üîπ Per ottenere la varianza spiegata dalle prime due componenti principali, puoi fare cos√¨:
r
Copia
Modifica
pca_data <- prcomp(t(assay(ntd)))

# Calcolare la percentuale di varianza spiegata
var_explained <- (pca_data$sdev^2) / sum(pca_data$sdev^2) * 100

# Stampare la percentuale della varianza spiegata dalle prime due componenti principali
cat("PC1 spiega", round(var_explained[1], 2), "% della varianza\n")
cat("PC2 spiega", round(var_explained[2], 2), "% della varianza\n")

Come interpretare la PCA in RNA-Seq?
Se PC1 separa chiaramente i campioni "case" dai "control", significa che la principale fonte di variazione nei dati √® dovuta alla condizione sperimentale.
Se PC1 e PC2 insieme spiegano una grande percentuale della varianza (es. > 70%), vuol dire che possiamo descrivere i dati in modo abbastanza accurato con solo queste due componenti.
Se la varianza spiegata √® molto distribuita su pi√π componenti, potrebbe essere necessario esaminare pi√π componenti o usare altre tecniche di clustering.

Se vuoi visualizzare la varianza spiegata da ciascuna componente in un grafico a barre, usa:

r
Copia
Modifica
# Grafico della varianza spiegata per ciascuna componente principale
barplot(var_explained, names.arg = paste0("PC", 1:length(var_explained)),
        las=2, col="skyblue", main="Varianza spiegata da ciascuna PC",
        ylab="Percentuale di varianza spiegata")

VISUALIZZA

Malattie che emergono
nell‚Äôanalisi di network genedisease e numero di geni
associati a ciascuna di esse

Dopo aver eseguito l'enrichment analysis con DisGeNET, puoi estrarre i risultati con:

r
Copia
Modifica
# Visualizzare i primi risultati dell‚Äôenrichment analysis
head(summary(disgnet))
Oppure, se vuoi un output tabellare pi√π chiaro:

r
Copia
Modifica
# Convertire i risultati in un dataframe
disgnet_results <- as.data.frame(disgnet)

# Selezionare le colonne di interesse: malattia e numero di geni associati
disgnet_results_selected <- disgnet_results[, c("ID", "Description", "Count")]

# Rinominare le colonne per chiarezza
colnames(disgnet_results_selected) <- c("Disease_ID", "Disease_Name", "Gene_Count")

# Visualizzare le prime 10 malattie pi√π arricchite
head(disgnet_results_selected, 10)

Una volta ottenuti i risultati, puoi visualizzare il network con:

r
Copia
Modifica
# Network plot delle malattie con i geni associati
cnetplot(disgnet, foldChange=resdata$log2FoldChange[which(resdata$padj<0.5)])
üîπ Cosa mostra questo grafico?

I nodi grandi sono le malattie arricchite.
I nodi piccoli sono i geni che vi sono associati.
I colori rappresentano i valori di log2FoldChange per i geni.

VISUALIZZA

Geni maggiormente in
evidenza nella heatmap di
questa analisi e indicazione
se sono maggiormente
espressi nei casi o meno

Se vuoi estrarre e stampare i valori di espressione dei geni visualizzati nella heatmap, usa:

r
Copia
Modifica
top_genes <- rownames(dds)[select]
gene_expression <- assay(ntd)[select,]
print(gene_expression)
‚úî top_genes contiene i nomi dei geni della heatmap
‚úî gene_expression contiene i valori di espressione normalizzati

Se vuoi vedere la media di espressione per condizione, fai:

r
Copia
Modifica
# Creiamo un dataframe con i valori medi per condizione
expression_means <- data.frame(
  Gene = top_genes,
  Mean_Control = rowMeans(assay(ntd)[select, dds$condition == "control"]),
  Mean_Case = rowMeans(assay(ntd)[select, dds$condition == "case"])
)

print(expression_means)
‚úî Se Mean_Case > Mean_Control ‚Üí il gene √® pi√π espresso nei casi.
‚úî Se Mean_Case < Mean_Control ‚Üí il gene √® pi√π espresso nei controlli
